latterCells <- rownames(finalCluster4)[finalCluster4$intermediate4 %in% latter]
finalCluster4[finalCluster4$intermediate4==local,]
rownames(finalCluster4)[order(finalCluster4[finalCluster4$intermediate4==local,]$MainClusters)]
interCells <-  rownames(finalCluster4)[order(finalCluster4[finalCluster4$intermediate4==local,]$MainClusters)]
cellOrder <- c(formerCells, interCells, latterCells)
pheatmap(expr[moduleResultDfTop$gene,cellOrder], show_colnames = F, cluster_rows = F, cluster_cols = F, show_rownames = T, annotation_col = finalCluster4)
order(finalCluster4[finalCluster4$intermediate4==local,]$MainClusters)
interCells <- finalCluster4[finalCluster4$intermediate4==local,]
interCells
rownames(interCells)[order(interCells$MainClusters)]
interCells2 <-  rownames(interCells)[order(interCells$MainClusters)]
cellOrder <- c(formerCells, interCells2, latterCells)
formerCells <- rownames(finalCluster4)[finalCluster4$intermediate4 %in% former]
latterCells <- rownames(finalCluster4)[finalCluster4$intermediate4 %in% latter]
interCells <- finalCluster4[finalCluster4$intermediate4==local,]
interCells2 <-  rownames(interCells)[order(interCells$MainClusters)]
cellOrder <- c(formerCells, interCells2, latterCells)
pheatmap(expr[moduleResultDfTop$gene,cellOrder], show_colnames = F, cluster_rows = F, cluster_cols = F, show_rownames = T, annotation_col = finalCluster4)
inferCluster
clusterDf
tmpModule
clusterDf
colSums(clusterDf)
sort(colSums(clusterDf), decreasing = T)
sort(colSums(clusterDf), decreasing = F)
names(sort(colSums(clusterDf), decreasing = F))
clusterDf[,names(sort(colSums(clusterDf), decreasing = F))]
clusterDf <- clusterDf[,names(sort(colSums(clusterDf), decreasing = F))]
finalCluster <- as.data.frame(apply(clusterDf, 1, function(x) names(sort(x, decreasing = T)[1])))
finalCluster$cell <- rownames(clusterDf)
colnames(finalCluster) <- c("Cluster", "cell")
if (sum(rowSums(clusterDf)==0)) {finalCluster[rowSums(clusterDf)==0,]$Cluster <- "unknow"}
finalCluster2 <- data.frame(Cluster=finalCluster$Cluster, row.names=finalCluster$cell)
# add intermediate module
finalCluster4 <- finalCluster2
order1 <- unique(finalCluster4$Cluster)
for (j in intermediateModule) {
# judge which two clusters it belong to
tmp1 <- inferCluster[,j]
tmp2 <- inferCluster[,-j]
origin2Cluster <- names(sort(apply(tmp2, 2, function(x) sum(x&tmp1)), decreasing = T)[1:2])
origin2Cluster <- sort(origin2Cluster)
#
finalCluster3 <- finalCluster
tmpInter <- tmp1 & (inferCluster[,origin2Cluster[1]] | inferCluster[,origin2Cluster[2]])
finalCluster3[tmpInter,]$Cluster <- as.character(j)
order2 <- c(order1[1:which(order1==origin2Cluster[1])], j, order1[which(order1==origin2Cluster[2]):length(order1)])
finalCluster4 <- cbind(finalCluster4, Cluster=finalCluster3$Cluster)
}
colnames(finalCluster4) <- c("MainClusters", paste("intermediate", j, sep=""))
finalCluster4$intermediate4 <- factor(finalCluster4$intermediate4, levels=order2)
# cellOrder <- rownames(finalCluster4)[order(finalCluster4$intermediate4)]
finalCluster4 <- finalCluster4[order(finalCluster4$intermediate4),]
finalCluster4
localSort <- function(finalCluster4, local=as.character(j)) {
order3 <- levels(finalCluster4$intermediate4)
former <- order3[1:(which(order3==local)-1)]
latter <- order3[(which(order3==local)+1):length(order3)]
formerCells <- rownames(finalCluster4)[finalCluster4$intermediate4 %in% former]
latterCells <- rownames(finalCluster4)[finalCluster4$intermediate4 %in% latter]
interCells <- finalCluster4[finalCluster4$intermediate4==local,]
interCells2 <-  rownames(interCells)[order(interCells$MainClusters)]
cellOrder <- c(formerCells, interCells2, latterCells)
return(cellOrder)
}
localSort(finalCluster4, local=as.character(j))
cellOrder <- localSort(finalCluster4, local=as.character(j))
pheatmap(expr[moduleResultDfTop$gene,cellOrder], show_colnames = F, cluster_rows = F, cluster_cols = F, show_rownames = T, annotation_col = finalCluster4)
moduleResultDfTop
corM[1:5,1:5]
dis_matrix[1:5,1:5]
dim(corM)
dim(dis_matrix)
dim(dis_matrix2)
dis_matrix2[1:5,1:5]
unique(moduleResultDfTop$module)
dis_matrix2[i,-i]
dim(dis_matrix2[i,-i])
moduleResultDfTop[moduleResultDfTop$module==i,]
moduleResultDfTop[moduleResultDfTop$module==i,]$gene
tmpGene <- moduleResultDfTop[moduleResultDfTop$module==i,]$gene
dis_matrix2[tmpGene,-tmpGene]
dis_matrix2[tmpGene,-c(tmpGene)]
tmpGene
dis_matrix2[!(rownames(dis_matrix2) %in% tmpGene), tmpGene]
dim(dis_matrix2[!(rownames(dis_matrix2) %in% tmpGene), tmpGene])
rowSums(dis_matrix2[!(rownames(dis_matrix2) %in% tmpGene), tmpGene])
fullGeneClusters <- data.frame(rownames=rownames(dis_matrix2))
cbind(fullGeneClusters, as.data.frame(rowSums(dis_matrix2[!(rownames(dis_matrix2) %in% tmpGene), tmpGene])))
cbind(fullGeneClusters, as.data.frame(rowSums(dis_matrix2[, tmpGene])))
fullGeneClusters <- data.frame(row.names = rownames(dis_matrix2))
cbind(fullGeneClusters, as.data.frame(rowSums(dis_matrix2[, tmpGene])))
fullGeneClusters <- cbind(fullGeneClusters, as.data.frame(rowSums(dis_matrix2[, tmpGene])))
fullGeneClusters <- data.frame(row.names = rownames(dis_matrix2))
for (i in unique(moduleResultDfTop$module)) {
tmpGene <- moduleResultDfTop[moduleResultDfTop$module==i,]$gene
fullGeneClusters <- cbind(fullGeneClusters, as.data.frame(rowSums(dis_matrix2[, tmpGene])))
}
fullGeneClusters
colnames(fullGeneClusters) <- unique(moduleResultDfTop$module)
fullGeneClusters
as.data.frame(apply(fullGeneClusters, 1, function(x) names(sort(x, decreasing = T)[1])))
head(as.data.frame(apply(fullGeneClusters, 1, function(x) names(sort(x, decreasing = T)[1]))))
head(fullGeneClusters)
head(as.data.frame(apply(fullGeneClusters, 1, function(x) names(sort(x, decreasing = F)[1]))))
fullGeneClusters2 <- as.data.frame(apply(fullGeneClusters, 1, function(x) names(sort(x, decreasing = F)[1])))
fullGeneClusters2
colnames(fullGeneClusters2) <- "module"
fullGeneClusters2
rownames(fullGeneClusters2)[fullGeneClusters2$module==i,]
rownames(fullGeneClusters2)[fullGeneClusters2$module==i]
tmpGene <- rownames(fullGeneClusters2)[fullGeneClusters2$module==i]
tmpGene
tmpGene2 <- moduleResultDfTop[moduleResultDfTop$module==i,]$gene
tmpGene2
rowSums(dis_matrix2[tmpGene, tmpGene2])
sort(rowSums(dis_matrix2[tmpGene, tmpGene2]), decreasing=F)
names(sort(rowSums(dis_matrix2[tmpGene, tmpGene2]), decreasing=F)[1:100])
sort(rowSums(dis_matrix2[tmpGene, tmpGene2]), decreasing=F)[1:100]
tmpTop100 <- names(sort(rowSums(dis_matrix2[tmpGene, tmpGene2]), decreasing=F)[1:100])
tmpGene2 %in% tmpTop100
fullGeneClusters3 <- list()
for (j in unique(moduleResultDfTop$module)) {
tmpGene <- rownames(fullGeneClusters2)[fullGeneClusters2$module==i]
tmpGene2 <- moduleResultDfTop[moduleResultDfTop$module==i,]$gene
tmpTop100 <- names(sort(rowSums(dis_matrix2[tmpGene, tmpGene2]), decreasing=F)[1:100])
fullGeneClusters3[[j]] <- tmpTop100
}
fullGeneClusters3
unique(moduleResultDfTop$module)
fullGeneClusters3 <- list()
for (j in unique(moduleResultDfTop$module)) {
tmpGene <- rownames(fullGeneClusters2)[fullGeneClusters2$module==j]
tmpGene2 <- moduleResultDfTop[moduleResultDfTop$module==j,]$gene
tmpTop100 <- names(sort(rowSums(dis_matrix2[tmpGene, tmpGene2]), decreasing=F)[1:100])
fullGeneClusters3[[j]] <- tmpTop100
}
fullGeneClusters3
rownames(fullGeneClusters2)[fullGeneClusters2$module=="1"] %in% fullGeneClusters3[[1]]
sum(rownames(fullGeneClusters2)[fullGeneClusters2$module=="1"] %in% fullGeneClusters3[[1]])
sum(fullGeneClusters3[[1]] %in% rownames(fullGeneClusters2)[fullGeneClusters2$module=="1"])
fullGeneClusters3[[1]]
rownames(fullGeneClusters2)[fullGeneClusters2$module=="1"]
sum(moduleResultDfTop[moduleResultDfTop$module=="1",]$gene %in% fullGeneClusters3[[1]])
sum(moduleResultDfTop[moduleResultDfTop$module=="2",]$gene %in% fullGeneClusters3[[2]])
sum(moduleResultDfTop[moduleResultDfTop$module=="3",]$gene %in% fullGeneClusters3[[3]])
sum(moduleResultDfTop[moduleResultDfTop$module=="4",]$gene %in% fullGeneClusters3[[4]])
sum(moduleResultDfTop[moduleResultDfTop$module=="5",]$gene %in% fullGeneClusters3[[5]])
source("/Users/surgery/Project/HOME/myScript/zxli_lib.R")
list(1=1,2=2)
list("1"=1,"2"=2)
go_pathway_by_clusterProfiler <- function(geneList=markerList) {
library(clusterProfiler)
library(org.Hs.eg.db)
go_list <- list()
kegg_list <- list()
for (i in names(geneList)) {
genes <- geneList[[i]]
projectName <- i
gene.df <- bitr(genes, fromType = "SYMBOL",
toType = c("ENSEMBL", "ENTREZID"),
OrgDb = org.Hs.eg.db)
ego <- enrichGO(gene      = gene.df$ENTREZID,
#universe      = genes,
keyType       = "ENTREZID",
OrgDb         = org.Hs.eg.db,
ont           = "BP",
pAdjustMethod = "BH",
pvalueCutoff  = 0.01,
qvalueCutoff  = 0.05,
readable      = TRUE)
go_list[[i]] <- ego@result
kk <- enrichKEGG(gene     = gene.df$ENTREZID,
organism     = 'hsa',
pvalueCutoff = 0.05)
kegg_list[[i]] <- kk@result
}
return(list("go_list"=go_list, "kegg_list"=kegg_list))
}
go_pathway <- go_pathway_by_clusterProfiler(geneList = fullGeneClusters3)
fullGeneClusters3
go_pathway <- go_pathway_by_clusterProfiler(geneList = fullGeneClusters3)
go_pathway
geneList = fullGeneClusters3
geneList
names(geneList)
1:length(geneList)
go_pathway_by_clusterProfiler <- function(geneList=markerList) {
library(clusterProfiler)
library(org.Hs.eg.db)
go_list <- list()
kegg_list <- list()
nameList <- names(geneList)
if (is.null(nameList)) (nameList <- 1:length(geneList))
for (i in nameList) {
genes <- geneList[[i]]
projectName <- i
gene.df <- bitr(genes, fromType = "SYMBOL",
toType = c("ENSEMBL", "ENTREZID"),
OrgDb = org.Hs.eg.db)
ego <- enrichGO(gene      = gene.df$ENTREZID,
#universe      = genes,
keyType       = "ENTREZID",
OrgDb         = org.Hs.eg.db,
ont           = "BP",
pAdjustMethod = "BH",
pvalueCutoff  = 0.01,
qvalueCutoff  = 0.05,
readable      = TRUE)
go_list[[i]] <- ego@result
kk <- enrichKEGG(gene     = gene.df$ENTREZID,
organism     = 'hsa',
pvalueCutoff = 0.05)
kegg_list[[i]] <- kk@result
}
return(list("go_list"=go_list, "kegg_list"=kegg_list))
}
go_pathway <- go_pathway_by_clusterProfiler(geneList = fullGeneClusters3)
go_pathway
go_pathway$go_list
go_pathway$go_list[[1]]
anno_list=go_pathway$go_list
colors <- brewer.pal(9,"Set3")[1:length(anno_list)]
names(colors) <- names(anno_list)
for (i in names(anno_list)) {
barplot_df <- anno_list[[i]]
if (length(barplot_df)<2 | is.null(barplot_df)) {next}
barplot_df <- barplot_df[order(barplot_df$pvalue, decreasing = F),]
barplot_df$Description <- factor(barplot_df$Description, levels=rev(barplot_df$Description))
maxpvalue <- max(-log10(barplot_df$pvalue))
if (length(barplot_df$Description)>20) {barplot_df <- barplot_df[1:20,]}
g <- ggplot(data=barplot_df, aes(x=Description, y=-log10(pvalue))) +
geom_bar(stat="identity", fill = colors[i]) +
geom_text(aes(label=Count),color="black",vjust=0.4,hjust=-0.5,size=3,fontface="bold") +
ylim(0, maxpvalue*1.1) +
coord_flip() +
labs(x = "", y = "-Log10(P-value)", title=i) +
theme_bw() +
theme(legend.position = "none") +
theme(axis.text.y = element_text(size = 13, color = "black", face = "bold"), axis.text.x = element_text(size = 11, color = "black", face = "plain")) +
# axis.title = element_blank() ,plot.title = element_blank(), axis.ticks.y = element_blank(), axis.ticks.x = element_blank(), axis.text.x = element_blank(),axis.line = element_blank(),panel.border = element_blank(),
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),  plot.margin=unit(c(0,0,0,0), "cm"), panel.border = element_blank()) +
theme(axis.line = element_line(color = 'black'))
# + scale_fill_manual(values=colorRampPalette(c("#3176e0", "#8831e0", "#e031b4"))(15))
plot(g)
}
anno_list
colors <- brewer.pal(9,"Set3")[1:length(anno_list)]
nameList <- names(anno_list)
if (is.null(nameList)) (nameList <- 1:length(anno_list))
names(colors) <- names(anno_list)
for (i in nameList) {
barplot_df <- anno_list[[i]]
if (length(barplot_df)<2 | is.null(barplot_df)) {next}
barplot_df <- barplot_df[order(barplot_df$pvalue, decreasing = F),]
barplot_df$Description <- factor(barplot_df$Description, levels=rev(barplot_df$Description))
maxpvalue <- max(-log10(barplot_df$pvalue))
if (length(barplot_df$Description)>20) {barplot_df <- barplot_df[1:20,]}
g <- ggplot(data=barplot_df, aes(x=Description, y=-log10(pvalue))) +
geom_bar(stat="identity", fill = colors[i]) +
geom_text(aes(label=Count),color="black",vjust=0.4,hjust=-0.5,size=3,fontface="bold") +
ylim(0, maxpvalue*1.1) +
coord_flip() +
labs(x = "", y = "-Log10(P-value)", title=i) +
theme_bw() +
theme(legend.position = "none") +
theme(axis.text.y = element_text(size = 13, color = "black", face = "bold"), axis.text.x = element_text(size = 11, color = "black", face = "plain")) +
# axis.title = element_blank() ,plot.title = element_blank(), axis.ticks.y = element_blank(), axis.ticks.x = element_blank(), axis.text.x = element_blank(),axis.line = element_blank(),panel.border = element_blank(),
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),  plot.margin=unit(c(0,0,0,0), "cm"), panel.border = element_blank()) +
theme(axis.line = element_line(color = 'black'))
# + scale_fill_manual(values=colorRampPalette(c("#3176e0", "#8831e0", "#e031b4"))(15))
plot(g)
# save, 700, 350
}
library(ggplot2)
colors <- brewer.pal(9,"Set3")[1:length(anno_list)]
nameList <- names(anno_list)
if (is.null(nameList)) (nameList <- 1:length(anno_list))
names(colors) <- names(anno_list)
for (i in nameList) {
barplot_df <- anno_list[[i]]
if (length(barplot_df)<2 | is.null(barplot_df)) {next}
barplot_df <- barplot_df[order(barplot_df$pvalue, decreasing = F),]
barplot_df$Description <- factor(barplot_df$Description, levels=rev(barplot_df$Description))
maxpvalue <- max(-log10(barplot_df$pvalue))
if (length(barplot_df$Description)>20) {barplot_df <- barplot_df[1:20,]}
g <- ggplot(data=barplot_df, aes(x=Description, y=-log10(pvalue))) +
geom_bar(stat="identity", fill = colors[i]) +
geom_text(aes(label=Count),color="black",vjust=0.4,hjust=-0.5,size=3,fontface="bold") +
ylim(0, maxpvalue*1.1) +
coord_flip() +
labs(x = "", y = "-Log10(P-value)", title=i) +
theme_bw() +
theme(legend.position = "none") +
theme(axis.text.y = element_text(size = 13, color = "black", face = "bold"), axis.text.x = element_text(size = 11, color = "black", face = "plain")) +
# axis.title = element_blank() ,plot.title = element_blank(), axis.ticks.y = element_blank(), axis.ticks.x = element_blank(), axis.text.x = element_blank(),axis.line = element_blank(),panel.border = element_blank(),
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),  plot.margin=unit(c(0,0,0,0), "cm"), panel.border = element_blank()) +
theme(axis.line = element_line(color = 'black'))
# + scale_fill_manual(values=colorRampPalette(c("#3176e0", "#8831e0", "#e031b4"))(15))
plot(g)
# save, 700, 350
}
anno_list
colors
library(ggplot2)
tmpcolors <- brewer.pal(9,"Set3")[1:length(anno_list)]
nameList <- names(anno_list)
if (is.null(nameList)) (nameList <- 1:length(anno_list))
names(tmpcolors) <- names(anno_list)
for (i in nameList) {
barplot_df <- anno_list[[i]]
if (length(barplot_df)<2 | is.null(barplot_df)) {next}
barplot_df <- barplot_df[order(barplot_df$pvalue, decreasing = F),]
barplot_df$Description <- factor(barplot_df$Description, levels=rev(barplot_df$Description))
maxpvalue <- max(-log10(barplot_df$pvalue))
if (length(barplot_df$Description)>20) {barplot_df <- barplot_df[1:20,]}
g <- ggplot(data=barplot_df, aes(x=Description, y=-log10(pvalue))) +
geom_bar(stat="identity", fill = colors[i]) +
geom_text(aes(label=Count),color="black",vjust=0.4,hjust=-0.5,size=3,fontface="bold") +
ylim(0, maxpvalue*1.1) +
coord_flip() +
labs(x = "", y = "-Log10(P-value)", title=i) +
theme_bw() +
theme(legend.position = "none") +
theme(axis.text.y = element_text(size = 13, color = "black", face = "bold"), axis.text.x = element_text(size = 11, color = "black", face = "plain")) +
# axis.title = element_blank() ,plot.title = element_blank(), axis.ticks.y = element_blank(), axis.ticks.x = element_blank(), axis.text.x = element_blank(),axis.line = element_blank(),panel.border = element_blank(),
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),  plot.margin=unit(c(0,0,0,0), "cm"), panel.border = element_blank()) +
theme(axis.line = element_line(color = 'black'))
# + scale_fill_manual(values=colorRampPalette(c("#3176e0", "#8831e0", "#e031b4"))(15))
plot(g)
# save, 700, 350
}
tmpcolors
tmpcolors <- brewer.pal(9,"Set3")[1:length(anno_list)]
library(ggplot2)
library(RColorBrewer)
tmpcolors <- brewer.pal(9,"Set3")[1:length(anno_list)]
nameList <- names(anno_list)
if (is.null(nameList)) (nameList <- 1:length(anno_list))
names(tmpcolors) <- names(anno_list)
for (i in nameList) {
barplot_df <- anno_list[[i]]
if (length(barplot_df)<2 | is.null(barplot_df)) {next}
barplot_df <- barplot_df[order(barplot_df$pvalue, decreasing = F),]
barplot_df$Description <- factor(barplot_df$Description, levels=rev(barplot_df$Description))
maxpvalue <- max(-log10(barplot_df$pvalue))
if (length(barplot_df$Description)>20) {barplot_df <- barplot_df[1:20,]}
g <- ggplot(data=barplot_df, aes(x=Description, y=-log10(pvalue))) +
geom_bar(stat="identity", fill = colors[i]) +
geom_text(aes(label=Count),color="black",vjust=0.4,hjust=-0.5,size=3,fontface="bold") +
ylim(0, maxpvalue*1.1) +
coord_flip() +
labs(x = "", y = "-Log10(P-value)", title=i) +
theme_bw() +
theme(legend.position = "none") +
theme(axis.text.y = element_text(size = 13, color = "black", face = "bold"), axis.text.x = element_text(size = 11, color = "black", face = "plain")) +
# axis.title = element_blank() ,plot.title = element_blank(), axis.ticks.y = element_blank(), axis.ticks.x = element_blank(), axis.text.x = element_blank(),axis.line = element_blank(),panel.border = element_blank(),
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),  plot.margin=unit(c(0,0,0,0), "cm"), panel.border = element_blank()) +
theme(axis.line = element_line(color = 'black'))
# + scale_fill_manual(values=colorRampPalette(c("#3176e0", "#8831e0", "#e031b4"))(15))
plot(g)
# save, 700, 350
}
tmpcolors
nameList
tmpcolors
library(ggplot2)
library(RColorBrewer)
tmpcolors <- brewer.pal(9,"Set3")[1:length(anno_list)]
nameList <- names(anno_list)
if (is.null(nameList)) {
nameList <- 1:length(anno_list)
names(tmpcolors) <- nameList
}
tmpcolors
for (i in nameList) {
barplot_df <- anno_list[[i]]
if (length(barplot_df)<2 | is.null(barplot_df)) {next}
barplot_df <- barplot_df[order(barplot_df$pvalue, decreasing = F),]
barplot_df$Description <- factor(barplot_df$Description, levels=rev(barplot_df$Description))
maxpvalue <- max(-log10(barplot_df$pvalue))
if (length(barplot_df$Description)>20) {barplot_df <- barplot_df[1:20,]}
g <- ggplot(data=barplot_df, aes(x=Description, y=-log10(pvalue))) +
geom_bar(stat="identity", fill = colors[i]) +
geom_text(aes(label=Count),color="black",vjust=0.4,hjust=-0.5,size=3,fontface="bold") +
ylim(0, maxpvalue*1.1) +
coord_flip() +
labs(x = "", y = "-Log10(P-value)", title=i) +
theme_bw() +
theme(legend.position = "none") +
theme(axis.text.y = element_text(size = 13, color = "black", face = "bold"), axis.text.x = element_text(size = 11, color = "black", face = "plain")) +
# axis.title = element_blank() ,plot.title = element_blank(), axis.ticks.y = element_blank(), axis.ticks.x = element_blank(), axis.text.x = element_blank(),axis.line = element_blank(),panel.border = element_blank(),
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),  plot.margin=unit(c(0,0,0,0), "cm"), panel.border = element_blank()) +
theme(axis.line = element_line(color = 'black'))
# + scale_fill_manual(values=colorRampPalette(c("#3176e0", "#8831e0", "#e031b4"))(15))
plot(g)
# save, 700, 350
}
for (i in nameList) {
barplot_df <- anno_list[[i]]
if (length(barplot_df)<2 | is.null(barplot_df)) {next}
barplot_df <- barplot_df[order(barplot_df$pvalue, decreasing = F),]
barplot_df$Description <- factor(barplot_df$Description, levels=rev(barplot_df$Description))
maxpvalue <- max(-log10(barplot_df$pvalue))
if (length(barplot_df$Description)>20) {barplot_df <- barplot_df[1:20,]}
g <- ggplot(data=barplot_df, aes(x=Description, y=-log10(pvalue))) +
geom_bar(stat="identity", fill = tmpcolors[i]) +
geom_text(aes(label=Count),color="black",vjust=0.4,hjust=-0.5,size=3,fontface="bold") +
ylim(0, maxpvalue*1.1) +
coord_flip() +
labs(x = "", y = "-Log10(P-value)", title=i) +
theme_bw() +
theme(legend.position = "none") +
theme(axis.text.y = element_text(size = 13, color = "black", face = "bold"), axis.text.x = element_text(size = 11, color = "black", face = "plain")) +
# axis.title = element_blank() ,plot.title = element_blank(), axis.ticks.y = element_blank(), axis.ticks.x = element_blank(), axis.text.x = element_blank(),axis.line = element_blank(),panel.border = element_blank(),
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),  plot.margin=unit(c(0,0,0,0), "cm"), panel.border = element_blank()) +
theme(axis.line = element_line(color = 'black'))
# + scale_fill_manual(values=colorRampPalette(c("#3176e0", "#8831e0", "#e031b4"))(15))
plot(g)
# save, 700, 350
}
nameList
i <- 1
barplot_df <- anno_list[[i]]
barplot_df
if (length(barplot_df)<2 | is.null(barplot_df)) {next}
barplot_df <- barplot_df[order(barplot_df$pvalue, decreasing = F),]
barplot_df
barplot_df$Description <- factor(barplot_df$Description, levels=rev(barplot_df$Description))
barplot_df
barplot_df$Description
maxpvalue <- max(-log10(barplot_df$pvalue))
maxpvalue
if (length(barplot_df$Description)>20) {barplot_df <- barplot_df[1:20,]}
barplot_df
g <- ggplot(data=barplot_df, aes(x=Description, y=-log10(pvalue))) +
geom_bar(stat="identity", fill = tmpcolors[i]) +
geom_text(aes(label=Count),color="black",vjust=0.4,hjust=-0.5,size=3,fontface="bold") +
ylim(0, maxpvalue*1.1) +
coord_flip() +
labs(x = "", y = "-Log10(P-value)", title=i) +
theme_bw() +
theme(legend.position = "none") +
theme(axis.text.y = element_text(size = 13, color = "black", face = "bold"), axis.text.x = element_text(size = 11, color = "black", face = "plain")) +
# axis.title = element_blank() ,plot.title = element_blank(), axis.ticks.y = element_blank(), axis.ticks.x = element_blank(), axis.text.x = element_blank(),axis.line = element_blank(),panel.border = element_blank(),
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),  plot.margin=unit(c(0,0,0,0), "cm"), panel.border = element_blank()) +
theme(axis.line = element_line(color = 'black'))
# + scale_fill_manual(values=colorRampPalette(c("#3176e0", "#8831e0", "#e031b4"))(15))
plot(g)
library(ggplot2)
library(RColorBrewer)
tmpcolors <- brewer.pal(9,"Set3")[1:length(anno_list)]
nameList <- names(anno_list)
if (is.null(nameList)) {
nameList <- 1:length(anno_list)
names(tmpcolors) <- nameList
}
for (i in nameList) {
barplot_df <- anno_list[[i]]
if (length(barplot_df)<2 | is.null(barplot_df)) {next}
barplot_df <- barplot_df[order(barplot_df$pvalue, decreasing = F),]
barplot_df$Description <- factor(barplot_df$Description, levels=rev(barplot_df$Description))
maxpvalue <- max(-log10(barplot_df$pvalue))
if (length(barplot_df$Description)>20) {barplot_df <- barplot_df[1:20,]}
g <- ggplot(data=barplot_df, aes(x=Description, y=-log10(pvalue))) +
geom_bar(stat="identity", fill = tmpcolors[i]) +
geom_text(aes(label=Count),color="black",vjust=0.4,hjust=-0.5,size=3,fontface="bold") +
ylim(0, maxpvalue*1.1) +
coord_flip() +
labs(x = "", y = "-Log10(P-value)", title=i) +
theme_bw() +
theme(legend.position = "none") +
theme(axis.text.y = element_text(size = 13, color = "black", face = "bold"), axis.text.x = element_text(size = 11, color = "black", face = "plain")) +
# axis.title = element_blank() ,plot.title = element_blank(), axis.ticks.y = element_blank(), axis.ticks.x = element_blank(), axis.text.x = element_blank(),axis.line = element_blank(),panel.border = element_blank(),
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),  plot.margin=unit(c(0,0,0,0), "cm"), panel.border = element_blank()) +
theme(axis.line = element_line(color = 'black'))
# + scale_fill_manual(values=colorRampPalette(c("#3176e0", "#8831e0", "#e031b4"))(15))
plot(g)
# save, 700, 350
}
pheatmap(expr[moduleResultDfTop$gene,cellOrder], show_colnames = F, cluster_rows = F, cluster_cols = F, show_rownames = T, annotation_col = finalCluster4)
anno_list=go_pathway$kegg_list
tmpcolors <- brewer.pal(9,"Set3")[1:length(anno_list)]
nameList <- names(anno_list)
if (is.null(nameList)) {
nameList <- 1:length(anno_list)
names(tmpcolors) <- nameList
}
for (i in nameList) {
barplot_df <- anno_list[[i]]
if (length(barplot_df)<2 | is.null(barplot_df)) {next}
barplot_df <- barplot_df[order(barplot_df$pvalue, decreasing = F),]
barplot_df$Description <- factor(barplot_df$Description, levels=rev(barplot_df$Description))
maxpvalue <- max(-log10(barplot_df$pvalue))
if (length(barplot_df$Description)>20) {barplot_df <- barplot_df[1:20,]}
g <- ggplot(data=barplot_df, aes(x=Description, y=-log10(pvalue))) +
geom_bar(stat="identity", fill = tmpcolors[i]) +
geom_text(aes(label=Count),color="black",vjust=0.4,hjust=-0.5,size=3,fontface="bold") +
ylim(0, maxpvalue*1.1) +
coord_flip() +
labs(x = "", y = "-Log10(P-value)", title=i) +
theme_bw() +
theme(legend.position = "none") +
theme(axis.text.y = element_text(size = 13, color = "black", face = "bold"), axis.text.x = element_text(size = 11, color = "black", face = "plain")) +
# axis.title = element_blank() ,plot.title = element_blank(), axis.ticks.y = element_blank(), axis.ticks.x = element_blank(), axis.text.x = element_blank(),axis.line = element_blank(),panel.border = element_blank(),
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),  plot.margin=unit(c(0,0,0,0), "cm"), panel.border = element_blank()) +
theme(axis.line = element_line(color = 'black'))
# + scale_fill_manual(values=colorRampPalette(c("#3176e0", "#8831e0", "#e031b4"))(15))
plot(g)
# save, 700, 350
}
save(fullGeneClusters3, file="fullGeneClusters3.Rdata")
