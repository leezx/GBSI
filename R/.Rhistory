theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_blank()) +
scale_color_manual(values=brewer.pal(11,"Paired")[1:12]) )
pcax2[pcax2$trueCluster!="11",]
pcax2 <- pcax2[pcax2$trueCluster!="11",]
print(ggplot(pcax2, aes(x=PC1, y=PC2, color=trueCluster)) +
geom_point(size=2.5, alpha=1) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_blank()) +
scale_color_manual(values=brewer.pal(11,"Paired")[1:11]) )
outlierdf <- data.frame(PC1=c(-40,-40,-40,-200,-210,-220), PC2=c(25,0,5,-50,-40,-50))
rownames(outlierdf) <- 250:255
pcax <- as.data.frame(pca$x)
c <- cbind(outlierdf, matrix(rep(0,247)*6, nrow = 6, ncol = 247))
colnames(c) <- colnames(pca$x)
d <- rbind(pca$x,c)
pcax2 <- as.data.frame(d)
pcax2$trueCluster <- "simulated outlier"
pcax2[rownames(pcax),]$trueCluster <- pcax$trueCluster
pcax2 <- pcax2[pcax2$trueCluster!="11",]
print(ggplot(pcax2, aes(x=PC1, y=PC2, color=trueCluster)) +
geom_point(size=2.5, alpha=1) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_blank()) +
scale_color_manual(values=brewer.pal(11,"Paired")[1:11]) )
d
d[,1:4]
tail(d[,1:4])
pcax2 <- as.data.frame(d)
pcax2$trueCluster <- "simulated outlier"
pcax2[rownames(pcax),]$trueCluster <- pcax$trueCluster
pcax2 <- pcax2[pcax2$trueCluster!="11",]
print(ggplot(pcax2, aes(x=PC1, y=PC2, color=trueCluster)) +
geom_point(size=2.5, alpha=1) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_blank()) +
scale_color_manual(values=brewer.pal(11,"Paired")[1:11]) )
table(pcax$trueCluster)
pcax$trueCluster
pcax <- as.data.frame(pca$x)
pcax$trueCluster <- as.character(Test_3_Pollen$true_labs$V1)
pcax$mvoutlier <- "NO"
pcax[!as.logical(outliers$wfinal01),]$mvoutlier <- "YES"
pcax$trueCluster <- factor(pcax$trueCluster, levels=as.character(1:11))
pcax$trueCluster
pcax2[rownames(pcax),]$trueCluster <- pcax$trueCluster
pcax2 <- pcax2[pcax2$trueCluster!="11",]
pcax2$trueCluster
print(ggplot(pcax2, aes(x=PC1, y=PC2, color=trueCluster)) +
geom_point(size=2.5, alpha=1) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_blank()) +
scale_color_manual(values=brewer.pal(11,"Paired")[1:11]) )
pcax2 <- pcax2[pcax2$trueCluster!="10",]
print(ggplot(pcax2, aes(x=PC1, y=PC2, color=trueCluster)) +
geom_point(size=2.5, alpha=1) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_blank()) +
scale_color_manual(values=brewer.pal(11,"Paired")[1:10]) )
dim(d)
recoverExpr <- d %*% ginv(pca$rotation)
recoverExpr <- as.matrix(d) %*% ginv(pca$rotation)
recoverExpr
recoverExpr[1:5,1:5]
recoverExpr[recoverExpr<0] <- 0
recoverExpr[1:5,1:5]
tail(recoverExpr)
tail(recoverExpr[1:5,])
tail(recoverExpr[,1:5])
save(recoverExpr, file="recoverExpr.Rdata")
?reshape
pcax
colData <- data.frame(sampleNames=colnames(pcax), cell_group=pcax$trueCluster, mvoutlier=pcax$mvoutlier)
colData <- data.frame(sampleNames=rownames(pcax), cell_group=pcax$trueCluster, mvoutlier=pcax$mvoutlier)
colData
colData <- data.frame(sampleNames=rownames(pcax), cell_group=pcax$trueCluster, mvoutlier=pcax$mvoutlier)
rowData <- data.frame(feature_symbol=rownames(Test_3_Pollen$in_X), gene_short_name=rownames(Test_3_Pollen$in_X), row.names = rownames(Test_3_Pollen$in_X))
pollen <- SingleCellExperiment(assays = list(counts = Test_3_Pollen$in_X, colData = colData, rowData = rowData)
)
pcax
rownames(pcax)
colnames(Test_3_Pollen$in_X)
colData <- data.frame(sampleNames=rownames(pcax), cell_group=pcax$trueCluster, mvoutlier=pcax$mvoutlier)
rowData <- data.frame(feature_symbol=rownames(Test_3_Pollen$in_X), gene_short_name=rownames(Test_3_Pollen$in_X), row.names = rownames(Test_3_Pollen$in_X))
pollen <- SingleCellExperiment(assays = list(counts = Test_3_Pollen$in_X, colData = colData, rowData = rowData))
colData
colData <- data.frame(sampleNames=rownames(pcax), cell_group=pcax$trueCluster, mvoutlier=pcax$mvoutlier, row.names=rownames(pcax))
rowData <- data.frame(feature_symbol=rownames(Test_3_Pollen$in_X), gene_short_name=rownames(Test_3_Pollen$in_X), row.names = rownames(Test_3_Pollen$in_X))
pollen <- SingleCellExperiment(assays = list(counts = Test_3_Pollen$in_X, colData = colData, rowData = rowData))
colData
rowData
rownames(data) <- rownames(rowData)
colnames(data) <- rownames(colData)
pollen <- SingleCellExperiment(assays = list(counts = data, colData = colData, rowData = rowData))
rownames(rowData)
rownames(data)
rownames(data)
rownames(data) <- rownames(rowData)
data <- as.data.frame(Test_3_Pollen$in_X)
rownames(data) <- rownames(rowData)
colnames(data) <- rownames(colData)
pollen <- SingleCellExperiment(assays = list(counts = data, colData = colData, rowData = rowData))
data
pollen <- SingleCellExperiment(assays = list(counts = data, colData = colData, rowData = rowData))
rownames(pcax)
pcax$trueCluster
pcax$mvoutlier
rownames(colData) <- colnames(data)
pollen <- SingleCellExperiment(assays = list(counts = data, colData = colData, rowData = rowData))
pollen <- SingleCellExperiment(assays = list(counts = data[rownames(rowData),rownames(colData)], colData = colData, rowData = rowData))
data[rownames(rowData),rownames(colData)]
colnames(data) <- NULL
pollen <- SingleCellExperiment(assays = list(counts = data, colData = colData, rowData = rowData))
rownames(data) <- rownames(rowData)
colnames(data) <- rownames(colData)
pollen <- SingleCellExperiment(assays = list(counts = data[rownames(rowData),rownames(colData)]), colData = colData, rowData = rowData)
colData <- data.frame(sampleNames=rownames(pcax), cell_group=pcax$trueCluster, mvoutlier=pcax$mvoutlier, row.names=rownames(pcax))
rowData <- data.frame(feature_symbol=rownames(Test_3_Pollen$in_X), gene_short_name=rownames(Test_3_Pollen$in_X), row.names = rownames(Test_3_Pollen$in_X))
data <- Test_3_Pollen$in_X
#rownames(data) <- rownames(rowData)
#colnames(data) <- rownames(colData)
pollen <- SingleCellExperiment(assays = list(counts = data), colData = colData, rowData = rowData)
pollen
logcounts(pollen) <- log2(counts(pollen)+1)
pollen <- calculateQCMetrics(pollen)
library(SC3)
pollen$cell_group
all_markers_raw <- get_marker_genes(logcounts(pollen), pollen$cell_group)
all_markers <- all_markers_raw[all_markers_raw$auroc>0.95 & !is.na(all_markers_raw$auroc) & all_markers_raw$pvalue < 0.001,]
sc3_marker <- data.frame(name=rownames(deng)[as.numeric(rownames(all_markers))], cluster=all_markers$clusts)
rownames(sc3_marker) <- sc3_marker$name
sc3_marker
sc3_marker$cluster
table(sc3_marker$cluster)
annotation_col <- data.frame(Cluster = factor(pollen$cell_group), row.names = colnames(pollen))
pheatmap(logcounts(pollen)[sc3_marker$name, order(pollen$cell_group)], cluster_rows = T, show_rownames = F, show_colnames = F, cluster_cols = F, annotation_col = annotation_col)
library(pheatmap)
pheatmap(logcounts(pollen)[sc3_marker$name, order(pollen$cell_group)], cluster_rows = T, show_rownames = F, show_colnames = F, cluster_cols = F, annotation_col = annotation_col)
sc3_marker$name
order(pollen$cell_group)
logcounts(pollen)[sc3_marker$name, order(pollen$cell_group)]
logcounts(pollen)[1:5,1:5]
sc3_marker <- data.frame(name=rownames(pollen)[as.numeric(rownames(all_markers))], cluster=all_markers$clusts)
rownames(sc3_marker) <- sc3_marker$name
sc3_marker
pheatmap(logcounts(pollen)[sc3_marker$name, order(pollen$cell_group)], cluster_rows = T, show_rownames = F, show_colnames = F, cluster_cols = F, annotation_col = annotation_col)
all_markers <- all_markers_raw[all_markers_raw$auroc>0.8 & !is.na(all_markers_raw$auroc) & all_markers_raw$pvalue < 0.05,]
sc3_marker <- data.frame(name=rownames(pollen)[as.numeric(rownames(all_markers))], cluster=all_markers$clusts)
rownames(sc3_marker) <- sc3_marker$name
pheatmap(logcounts(pollen)[sc3_marker$name, order(pollen$cell_group)], cluster_rows = T, show_rownames = F, show_colnames = F, cluster_cols = F, annotation_col = annotation_col)
all_markers <- all_markers_raw[all_markers_raw$auroc>0.8 & !is.na(all_markers_raw$auroc) & all_markers_raw$pvalue < 0.05,]
sc3_marker <- data.frame(name=rownames(pollen)[as.numeric(rownames(all_markers))], cluster=all_markers$clusts)
rownames(sc3_marker) <- sc3_marker$name
sc3_marker
corMatrix <- cor(x = as.matrix(t(logcounts(pollen))), method = "pearson")
dim(corMatrix)
sc3_marker$name
sc3_marker[sc3_marker$cluster=="3",]$name
markers <- sc3_marker[sc3_marker$cluster=="3",]$name
marker2 <- sort(colSums(abs(corMatrix[markers, markers])), decreasing = T)[1:100]
marker2
table(sc3_marker$cluster)
markers <- sc3_marker[sc3_marker$cluster=="8",]$name
marker2 <- sort(colSums(abs(corMatrix[markers, markers])), decreasing = T)[1:100]
marker2
pheatmap(logcounts(pollen)[names(marker2), order(pollen$cell_group)], cluster_rows = T, show_rownames = F, show_colnames = F, cluster_cols = F, annotation_col = annotation_col)
notmakers <- rownames(corMatrix)[!rownames(corMatrix)%in%sc3_marker$name][1:2000]
notmakers
notmakers2 <- sort(colSums(abs(corMatrix[notmakers, notmakers])), decreasing = F)[1:100]
notmakers2
cor1 <- ((corMatrix[names(notmakers2), names(notmakers2)]))
cor1 <- ((corMatrix[names(notmakers2), names(notmakers2)]))
cor1 <- cor1[row(cor1)>col(cor1)]
cor2 <- ((corMatrix[names(marker2), names(notmakers2)]))
cor2 <- cor2[row(cor2)>col(cor2)]
cor3 <- ((corMatrix[names(marker2), names(marker2)]))
cor3 <- cor3[row(cor3)>col(cor3)]
total_pearson <- data.frame(cor1, cor2, cor3)
total_pearson
apply(total_pearson, 2, mean)
corMatrix2 <- cor(x = as.matrix(t(recoverExpr)), method = "pearson")
dim(corMatrix2)
corMatrix2 <- cor(x = as.matrix((recoverExpr)), method = "pearson")
dim(corMatrix2)
cor1 <- ((corMatrix2[names(notmakers2), names(notmakers2)]))
cor1 <- cor1[row(cor1)>col(cor1)]
cor2 <- ((corMatrix2[names(marker2), names(notmakers2)]))
cor2 <- cor2[row(cor2)>col(cor2)]
cor3 <- ((corMatrix2[names(marker2), names(marker2)]))
cor3 <- cor3[row(cor3)>col(cor3)]
corMatrix2[1:5,1:5]
names(notmakers2)
as.data.frame(corMatrix2)[1:5,1:5]
corMatrix[1:5,1:5]
rownames(corMatrix2)
corMatrix2 <- as.data.frame(corMatrix2)
1:(dim(corMatrix2)[2])
colnames(corMatrix2) <- 1:(dim(corMatrix2)[2])
cor1 <- ((corMatrix2[names(notmakers2), names(notmakers2)]))
cor1 <- cor1[row(cor1)>col(cor1)]
cor2 <- ((corMatrix2[names(marker2), names(notmakers2)]))
cor2 <- cor2[row(cor2)>col(cor2)]
cor3 <- ((corMatrix2[names(marker2), names(marker2)]))
cor3 <- cor3[row(cor3)>col(cor3)]
total_pearson <- cbind(total_pearson, cor1, cor2, cor3)
apply(total_pearson, 2, mean)
apply(abs(total_pearson), 2, mean)
apply(abs(total_pearson), 2, median)
dim(pollen)
total_pearson
total_pearson[,c(3,6)]
total_pearson2 <- total_pearson[,c(3,6)]
colnames(total_pearson2) <- c("Ctrl", "Outlier")
library(reshape2)
total_pearson3 <- reshape(total_pearson2)
total_pearson3
reshape(total_pearson2)
total_pearson2
melt(total_pearson2)
total_pearson3 <- melt(total_pearson2)
total_pearson3
colnames(total_pearson3)
ggplot(total_pearson3, aes(x=variable, y=log10(value), fill=variable)) + geom_boxplot()
ggplot(total_pearson3, aes(x=variable, y=(value), fill=variable)) + geom_boxplot()
seq(30, 80, by=10)
seq(50, 100, by=10)
outlierdf <- data.frame(PC1=c(-40,-40,-40,-200,-210,-220, rep(-250, 6), rep(10,6), rep(-100, 6)), PC2=c(25,0,5,-50,-40,-50, seq(30, 80, by=10), seq(-50, -100, by=10), seq(50, 100, by=10)))
seq(-50, -100, by=10)
-seq(50, 100, by=10)
outlierdf <- data.frame(PC1=c(-40,-40,-40,-200,-210,-220, rep(-250, 6), rep(10,6), rep(-100, 6)), PC2=c(25,0,5,-50,-40,-50, seq(30, 80, by=10), -seq(50, 100, by=10), seq(50, 100, by=10)))
outlierdf
c <- cbind(outlierdf, matrix(rep(0,247)*24, nrow = 24, ncol = 247))
c
c[,1:4]
colnames(c) <- colnames(pca$x)
d <- rbind(pca$x,c)
d
pcax2 <- as.data.frame(d)
pcax2$trueCluster <- "simulated outlier"
pcax2[rownames(pcax),]$trueCluster <- pcax$trueCluster
pcax2 <- pcax2[pcax2$trueCluster!="11",]
pcax2 <- pcax2[pcax2$trueCluster!="10",]
print(ggplot(pcax2, aes(x=PC1, y=PC2, color=trueCluster)) +
geom_point(size=2.5, alpha=1) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_blank()) +
scale_color_manual(values=brewer.pal(11,"Paired")[1:10]) )
recoverExpr <- as.matrix(d) %*% ginv(pca$rotation)
recoverExpr[recoverExpr<0] <- 0
save(recoverExpr, file="recoverExpr.Rdata")
corMatrix2 <- cor(x = as.matrix((recoverExpr)), method = "pearson")
corMatrix2 <- as.data.frame(corMatrix2)
colnames(corMatrix2) <- 1:(dim(corMatrix2)[2])
cor1 <- ((corMatrix2[names(notmakers2), names(notmakers2)]))
cor1 <- cor1[row(cor1)>col(cor1)]
cor2 <- ((corMatrix2[names(marker2), names(notmakers2)]))
cor2 <- cor2[row(cor2)>col(cor2)]
cor3 <- ((corMatrix2[names(marker2), names(marker2)]))
cor3 <- cor3[row(cor3)>col(cor3)]
total_pearson
total_pearson <- cbind(total_pearson, cor1, cor2, cor3)
total_pearson
total_pearson2 <- total_pearson[,c(3,6,9)]
colnames(total_pearson2) <- c("Ctrl", "Outlier", "Outlier2")
total_pearson3 <- melt(total_pearson2)
total_pearson3
ggplot(total_pearson3, aes(x=variable, y=value, fill=variable)) + geom_boxplot()
apply(total_pearson3, 2, mean)
apply(total_pearson2, 2, mean)
c
dim(pca$x)
logcounts(pollen)
dim(logcounts(pollen))
rep(seq(1,1000, by=2.5), 2)
dim(logcounts(pollen))
dim(matrix(rep(0, 6982)*24, nrow = 6982, ncol = 249))
matrix(rep(0, 6982)*24, nrow = 6982, ncol = 249)
matrix(rep(0, 6982)*24, nrow = 6982, ncol = 24)
seq(1,1000, by=2.5)
length(seq(1,1000, by=2.5))
i <- 1
randomRow <- sample(1:6982, 400)
randomRow
outlierdf[randomRow, i] <- seq(1,1000, by=2.5)
outlierdf
outlierdf <- matrix(rep(0, 6982)*24, nrow = 6982, ncol = 24)
outlierdf[randomRow, i] <- seq(1,1000, by=2.5)
outlierdf
outlierdf <- matrix(rep(0, 6982)*24, nrow = 6982, ncol = 24)
for (i in 1:24) {
randomRow <- sample(1:6982, 400)
outlierdf[randomRow, i] <- seq(1,1000, by=2.5)
}
outlierdf
dim(logcounts(pollen))
length(250:275)
length(250:273)
colnames(outlierdf) <- 250:273
outlierdf
rownames(outlierdf) <- rownames(pollen)
d <- cbind(logcounts(pollen), outlierdf)
d
dim(d)
pcax2 <- as.data.frame(d)
corMatrix2 <- cor(x = as.matrix((d)), method = "pearson")
corMatrix2 <- as.data.frame(corMatrix2)
colnames(corMatrix2) <- 1:(dim(corMatrix2)[2])
cor1 <- ((corMatrix2[names(notmakers2), names(notmakers2)]))
cor1 <- cor1[row(cor1)>col(cor1)]
cor2 <- ((corMatrix2[names(marker2), names(notmakers2)]))
cor2 <- cor2[row(cor2)>col(cor2)]
cor3 <- ((corMatrix2[names(marker2), names(marker2)]))
cor3 <- cor3[row(cor3)>col(cor3)]
dim(corMatrix2)
corMatrix2 <- cor(x = as.matrix(t(d)), method = "pearson")
dim(corMatrix2)
corMatrix2 <- as.data.frame(corMatrix2)
colnames(corMatrix2) <- 1:(dim(corMatrix2)[2])
cor1 <- ((corMatrix2[names(notmakers2), names(notmakers2)]))
cor1 <- cor1[row(cor1)>col(cor1)]
cor2 <- ((corMatrix2[names(marker2), names(notmakers2)]))
cor2 <- cor2[row(cor2)>col(cor2)]
cor3 <- ((corMatrix2[names(marker2), names(marker2)]))
cor3 <- cor3[row(cor3)>col(cor3)]
total_pearson
apply(total_pearson, 2, mean)
mean(cor3)
dim(d)
corMatrix2 <- cor(x = as.matrix(t(d[,1:(249+1)])), method = "pearson")
corMatrix2 <- as.data.frame(corMatrix2)
colnames(corMatrix2) <- 1:(dim(corMatrix2)[2])
cor1 <- ((corMatrix2[names(notmakers2), names(notmakers2)]))
cor1 <- cor1[row(cor1)>col(cor1)]
cor2 <- ((corMatrix2[names(marker2), names(notmakers2)]))
cor2 <- cor2[row(cor2)>col(cor2)]
cor3 <- ((corMatrix2[names(marker2), names(marker2)]))
cor3 <- cor3[row(cor3)>col(cor3)]
mean(cor3)
save(d, file="simulated_outlier.Rdata")
total_pearson
total_pearson <- total_pearson[,1:3]
total_pearson
total_pearson2 <- total_pearson
seq(1,15,by=2)
for (i in seq(1,15,by=2)) {
corMatrix2 <- cor(x = as.matrix(t(d[,1:(249+i)])), method = "pearson")
corMatrix2 <- as.data.frame(corMatrix2)
colnames(corMatrix2) <- 1:(dim(corMatrix2)[2])
cor1 <- ((corMatrix2[names(notmakers2), names(notmakers2)]))
cor1 <- cor1[row(cor1)>col(cor1)]
cor2 <- ((corMatrix2[names(marker2), names(notmakers2)]))
cor2 <- cor2[row(cor2)>col(cor2)]
cor3 <- ((corMatrix2[names(marker2), names(marker2)]))
cor3 <- cor3[row(cor3)>col(cor3)]
total_pearson <- cbind(total_pearson, cor1, cor2, cor3)
}
apply(total_pearson, 2, mean)
dim(total_pearson)
rep(c("nonM-nonM", "M-nonM", "M-M"), 9)
colnames(total_pearson) <- rep(c("nonM-nonM", "M-nonM", "M-M"), 9)
total_pearson3 <- melt(total_pearson)
head(total_pearson3)
ggplot(total_pearson3, aes(x=variable, y=value, fill=variable)) + geom_boxplot()
total_pearson3
head(total_pearson3)
total_pearson
total_pearson2
cbind(total_pearson2, 0)
total_pearson <- cbind(total_pearson2, level=0)
total_pearson
total_pearson2 <- total_pearson
temp <- data.frame(cor1=cor1, cor2=cor2, cor3=cor3)
temp
cbind(temp, level=i)
total_pearson
rbind(total_pearson, cbind(temp, level=i))
tail(rbind(total_pearson, cbind(temp, level=i)))
for (i in seq(1,15,by=2)) {
corMatrix2 <- cor(x = as.matrix(t(d[,1:(249+i)])), method = "pearson")
corMatrix2 <- as.data.frame(corMatrix2)
colnames(corMatrix2) <- 1:(dim(corMatrix2)[2])
cor1 <- ((corMatrix2[names(notmakers2), names(notmakers2)]))
cor1 <- cor1[row(cor1)>col(cor1)]
cor2 <- ((corMatrix2[names(marker2), names(notmakers2)]))
cor2 <- cor2[row(cor2)>col(cor2)]
cor3 <- ((corMatrix2[names(marker2), names(marker2)]))
cor3 <- cor3[row(cor3)>col(cor3)]
temp <- data.frame(cor1=cor1, cor2=cor2, cor3=cor3)
# cbind(temp, level=i)
total_pearson <- rbind(total_pearson, cbind(temp, level=i))
}
total_pearson
head(total_pearson)
colnames(total_pearson) <- c("nonM-nonM", "M-nonM", "M-M", "level")
?melt
melt(total_pearson)
melt(total_pearson, id.vars = "level")
total_pearson3 <- melt(total_pearson, id.vars = "level")
ggplot(total_pearson3, aes(x=level, y=value, fill=variable)) + geom_boxplot()
ggplot(total_pearson3, aes(x=level, y=value, fill=variable)) + geom_boxplot() +facet_wrap(~ level, ncol=5)
ggplot(total_pearson3, aes(x=level, y=value, fill=variable)) + geom_boxplot() +facet_grid(~ level, ncol=5)
ggplot(total_pearson3, aes(x=level, y=value, fill=variable)) + geom_boxplot() +facet_grid(~ level,)
ggplot(total_pearson3, aes(x=level, y=value)) + geom_boxplot(aes(fill=variable)) +facet_grid(~ level,)
total_pearson3$level <- as.character(total_pearson3$level)
ggplot(total_pearson3, aes(x=level, y=value)) + geom_boxplot(aes(fill=variable)) +facet_grid(~ level,)
head(total_pearson3)
ggplot(total_pearson3, aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable)) +facet_grid(~ level,)
total_pearson3$level <- factor(total_pearson3$level, levels=c(0,1,3,5,7,9,11,13,15)))
total_pearson3$level <- factor(total_pearson3$level, levels=c(0,1,3,5,7,9,11,13,15))
ggplot(total_pearson3, aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable)) +facet_grid(~ level,)
ggplot(total_pearson3, aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable)) +facet_wrap(~ level,ncol=3)
ggplot(total_pearson3, aes(x=variable, y=value)) +
geom_boxplot(aes(fill=variable)) +
facet_wrap(~ level,ncol=3) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_blank()) +
scale_color_manual(values=brewer.pal(11,"Paired")[1:10])
ggplot(total_pearson3, aes(x=variable, y=value)) +
geom_boxplot(aes(fill=variable)) +
facet_wrap(~ level,ncol=3) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_blank(),
axis.text.x  = element_text(face="bold", angle=30, size = 10, color = "black", vjust=0.5),
axis.text.y  = element_text(face="plain", size = 10, color = "black")) +
labs(x = "Paired group", y = "Correlation\n", title = "Effect of outlier on correlation") +
scale_color_manual(values=brewer.pal(11,"Paired")[1:10])
ggplot(total_pearson3, aes(x=variable, y=value)) +
geom_boxplot(aes(fill=variable)) +
facet_wrap(~ level,ncol=3) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_blank(),
axis.text.x  = element_text(face="plain", angle=30, size = 12, color = "black", vjust=0.5),
axis.text.y  = element_text(face="plain", size = 12, color = "black")) +
labs(x = "Paired group", y = "Correlation\n", title = "Effect of outlier on correlation") +
scale_color_manual(values=brewer.pal(11,"Paired")[1:10])
paste("outlier=", total_pearson3$level, sep="")
total_pearson3$level <- paste("outlier=", total_pearson3$level, sep="")
total_pearson3
colnames(total_pearson3)
colnames(total_pearson3) <- c("level", "group", "value")
ggplot(total_pearson3, aes(x=group, y=value)) +
geom_boxplot(aes(fill=group)) +
facet_wrap(~ level,ncol=3) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_blank(),
axis.text.x  = element_text(face="plain", angle=30, size = 12, color = "black", vjust=0.5),
axis.text.y  = element_text(face="plain", size = 12, color = "black")) +
labs(x = "Paired group", y = "Correlation\n", title = "Effect of outlier on correlation") +
scale_color_manual(values=brewer.pal(11,"Paired")[1:10])
paste("outlier=", c(0,1,3,5,7,9,11,13,15), sep="")
total_pearson3$level <- factor(total_pearson3$level, levels=paste("outlier=", c(0,1,3,5,7,9,11,13,15), sep=""))
ggplot(total_pearson3, aes(x=group, y=value)) +
geom_boxplot(aes(fill=group)) +
facet_wrap(~ level,ncol=3) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_blank(),
axis.text.x  = element_text(face="plain", angle=30, size = 12, color = "black", vjust=0.5),
axis.text.y  = element_text(face="plain", size = 12, color = "black")) +
labs(x = "Paired group", y = "Correlation\n", title = "Effect of outlier on correlation") +
scale_color_manual(values=brewer.pal(11,"Paired")[1:10])
ggplot(total_pearson3, aes(x=group, y=value)) +
geom_boxplot(aes(fill=group)) +
facet_wrap(~ level,ncol=3) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_blank(),
axis.text.x  = element_text(face="plain", angle=30, size = 12, color = "black", vjust=0.5),
axis.text.y  = element_text(face="plain", size = 12, color = "black")) +
labs(x = "Paired group", y = "Correlation\n", title = "Effect of outlier on correlation") +
scale_color_fill(values=brewer.pal(11,"Paired")[1:10])
ggplot(total_pearson3, aes(x=group, y=value)) +
geom_boxplot(aes(fill=group)) +
facet_wrap(~ level,ncol=3) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_blank(),
axis.text.x  = element_text(face="plain", angle=30, size = 12, color = "black", vjust=0.5),
axis.text.y  = element_text(face="plain", size = 12, color = "black")) +
labs(x = "Paired group", y = "Correlation\n", title = "Effect of outlier on correlation") +
scale_fill_manual(values=brewer.pal(11,"Paired")[1:10])
save(notmakers2, marker2, total_pearson, file="makeOutlier.Rdata")
ggplot(total_pearson3, aes(x=group, y=value)) +
geom_boxplot(aes(fill=group)) +
facet_wrap(~ level,ncol=3) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_blank(),
axis.text.x  = element_text(face="plain", angle=30, size = 12, color = "black", vjust=0.5),
axis.text.y  = element_text(face="plain", size = 12, color = "black")) +
labs(x = "Paired group", y = "Correlation\n", title = "Effect of outlier on correlation") +
scale_fill_manual(values=brewer.pal(3,"Set2"))
ggplot(total_pearson3, aes(x=group, y=value)) +
geom_boxplot(aes(fill=group)) +
facet_wrap(~ level,ncol=3) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_blank(),
axis.text.x  = element_text(face="plain", angle=30, size = 12, color = "black", vjust=0.5),
axis.text.y  = element_text(face="plain", size = 12, color = "black")) +
labs(x = "Paired group", y = "Correlation\n", title = "Effect of outlier on correlation") +
scale_fill_manual(values=brewer.pal(3,"Set3"))
